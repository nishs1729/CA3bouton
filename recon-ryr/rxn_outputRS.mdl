REACTION_DATA_OUTPUT {

	OUTPUT_BUFFER_SIZE = 1000
	STEP = 10*dt
	SHOW_EXACT_TIME = OFF
	HEADER = "#"

/*	Ca */
	{	COUNT[Ca, tissue.neuropil.a001[az_conc_plane], ESTIMATE_CONCENTRATION]*EXPRESSION[2.0] : "Ca.Conc.az",
		COUNT[Ca, tissue.neuropil.a001] : "Ca.Pre",
	//	COUNT[Ca, tripartite_synapse_model.tripartite_synapse.postsynaptic] : "Ca.Post",
		COUNT[Cae, tissue.neuropil.a001_er_0] : "Ca.ER"
	}	=> output_folder & "/dat/ca.dat"


/*	VDCC Flux (Cumulative)*/
	{COUNT[VDCC_Ca_flux,WORLD]} => output_folder & "/dat/vdcc_pq_ca_flux.dat"

/*	VDCC sync, async and spont Glu release */
	{TRIGGER[synchronous_release_0, tissue.neuropil.a001]}
		=> output_folder & "/dat/vdcc.sync_0.dat"
	{TRIGGER[synchronous_release_1, tissue.neuropil.a001]}
		=> output_folder & "/dat/vdcc.sync_1.dat"
	{TRIGGER[synchronous_release_2, tissue.neuropil.a001]}
		=> output_folder & "/dat/vdcc.sync_2.dat"
	{TRIGGER[asynchronous_release_0, tissue.neuropil.a001]}
		=> output_folder & "/dat/vdcc.async_0.dat"
	{TRIGGER[asynchronous_release_1, tissue.neuropil.a001]}
		=> output_folder & "/dat/vdcc.async_1.dat"
	{TRIGGER[asynchronous_release_2, tissue.neuropil.a001]}
		=> output_folder & "/dat/vdcc.async_2.dat"
	{TRIGGER[asynchronous_release_3, tissue.neuropil.a001]}
		=> output_folder & "/dat/vdcc.async_3.dat"
	{TRIGGER[asynchronous_release_4, tissue.neuropil.a001]}
		=> output_folder & "/dat/vdcc.async_4.dat"
	{TRIGGER[spontaneous_release, tissue.neuropil.a001]}
		=> output_folder & "/dat/vdcc.spont.dat"


/*	SERCA PUMP */
	{	COUNT[SERCA_X1, tissue.neuropil.a001_er_0],
		COUNT[SERCA_X1A, tissue.neuropil.a001_er_0],
		COUNT[SERCA_X2, tissue.neuropil.a001_er_0],
		COUNT[SERCA_Y2, tissue.neuropil.a001_er_0],
		COUNT[SERCA_Y1A, tissue.neuropil.a001_er_0],
		COUNT[SERCA_Y1, tissue.neuropil.a001_er_0]
	}	=> output_folder & "/dat/serca_mol.dat"

	{	COUNT[serca_y2_x2, tissue.neuropil.a001_er_0] : "SERCA_Ca_out_flux",
		COUNT[serca_x2_y2, tissue.neuropil.a001_er_0] : "SERCA_Ca_in_flux"
	} 	=> output_folder & "/dat/serca_ca_flux.dat"

/*	RyR */
	{	COUNT[RyRC1_L, WORLD],
		COUNT[RyRC2_L, WORLD],
		COUNT[RyRC3_L, WORLD],
		COUNT[RyRC4_L, WORLD],
		COUNT[RyRC5_L, WORLD],
		COUNT[RyRO1_L, WORLD],
		COUNT[RyRO2_L, WORLD],
		COUNT[RyRO3_L, WORLD],
		COUNT[RyRC1_H1, WORLD],
		COUNT[RyRC2_H1, WORLD],
		COUNT[RyRC3_H1, WORLD],
		COUNT[RyRC4_H1, WORLD],
		COUNT[RyRO1_H1, WORLD],
		COUNT[RyRO2_H1, WORLD]
	}	=> output_folder & "/dat/ryr_mol.dat"

	{	COUNT[ryro1_l_ca_flux_out, WORLD]
		+ COUNT[ryro2_l_ca_flux_out, WORLD]
		+ COUNT[ryro3_l_ca_flux_out, WORLD]
		+ COUNT[ryro1_h1_ca_flux_out, WORLD]
		+ COUNT[ryro2_h1_ca_flux_out, WORLD] : "out",

		COUNT[ryro1_l_ca_flux_in, WORLD]
		+ COUNT[ryro2_l_ca_flux_in, WORLD]
		+ COUNT[ryro3_l_ca_flux_in, WORLD]
		+ COUNT[ryro1_h1_ca_flux_in, WORLD]
		+ COUNT[ryro2_h1_ca_flux_in, WORLD] : "in"
	}	=> output_folder & "/dat/ryr_ca_flux.dat"


/* AZ */
	{   COUNT[X0Y0, WORLD],
        COUNT[X1Y0, WORLD],
        COUNT[X2Y0, WORLD],
        COUNT[X3Y0, WORLD],
        COUNT[X4Y0, WORLD],
        COUNT[X5Y0, WORLD],
        COUNT[X0Y1, WORLD],
        COUNT[X1Y1, WORLD],
        COUNT[X2Y1, WORLD],
        COUNT[X3Y1, WORLD],
        COUNT[X4Y1, WORLD],
        COUNT[X5Y1, WORLD],
        COUNT[X0Y2, WORLD],
        COUNT[X1Y2, WORLD],
        COUNT[X2Y2, WORLD],
        COUNT[X3Y2, WORLD],
        COUNT[X4Y2, WORLD],
        COUNT[X5Y2, WORLD]
    }	=> output_folder & "/dat/az.dat"

/*	NMDAR */
/*'''
	{	COUNT[NMDAR_Ca_flux_H1, WORLD]
		+ COUNT[NMDAR_Ca_flux_H2, WORLD]
		+ COUNT[NMDAR_Ca_flux_M1, WORLD]
		+ COUNT[NMDAR_Ca_flux_M2, WORLD]
		+ COUNT[NMDAR_Ca_flux_L1, WORLD]
		+ COUNT[NMDAR_Ca_flux_L2, WORLD] : "NMDAR_Ca_flux"
	}	=> output_folder & "/dat/nmda_ca_flux.dat"

	{	COUNT[NMDAR_Glu_bind_H1, WORLD]
		+ COUNT[NMDAR_Glu_bind_H2, WORLD]
		+ COUNT[NMDAR_Glu_bind_M1, WORLD]
		+ COUNT[NMDAR_Glu_bind_M2, WORLD]
		+ COUNT[NMDAR_Glu_bind_L1, WORLD]
		+ COUNT[NMDAR_Glu_bind_L2, WORLD] : "tot_NMDAR_Glu_bind"
	}	=> output_folder & "/dat/nmda_glu_bind.dat"
'''*/
/*	PMCA and Leak */

	{	COUNT[PMCA_Ca_flux_out, WORLD] - COUNT[PMCA_Ca_flux_in, WORLD] : "PMCAFlux",
		COUNT[PMCA_Ca_leak_flux, WORLD] : "PMCAleakFlux"
//		COUNT[PM_leak_Ca_flux, WORLD] : "PMleakFlux",
//		COUNT[ER_leak_Ca_flux, WORLD] : "ERleakFlux"
	} => output_folder & "/dat/pmca&leak_ca_flux.dat"


/*	Readily Releasable Pool (RRP)*/
	{
		EXPRESSION[15]
		- COUNT[X0Y0e, tissue.neuropil.a001]
		- COUNT[X1Y0e, tissue.neuropil.a001]
		- COUNT[X2Y0e, tissue.neuropil.a001]
		- COUNT[X3Y0e, tissue.neuropil.a001]
		- COUNT[X4Y0e, tissue.neuropil.a001]
		- COUNT[X5Y0e, tissue.neuropil.a001]
		- COUNT[X0Y1e, tissue.neuropil.a001]
		- COUNT[X1Y1e, tissue.neuropil.a001]
		- COUNT[X2Y1e, tissue.neuropil.a001]
		- COUNT[X3Y1e, tissue.neuropil.a001]
		- COUNT[X4Y1e, tissue.neuropil.a001]
		- COUNT[X5Y1e, tissue.neuropil.a001]
		- COUNT[X0Y2e, tissue.neuropil.a001]
		- COUNT[X1Y2e, tissue.neuropil.a001]
		- COUNT[X2Y2e, tissue.neuropil.a001]
		- COUNT[X3Y2e, tissue.neuropil.a001]
		- COUNT[X4Y2e, tissue.neuropil.a001]
		- COUNT[X5Y2e, tissue.neuropil.a001]
		- COUNT[X5Y0r, tissue.neuropil.a001]
		- COUNT[X5Y1r, tissue.neuropil.a001]
		- COUNT[X0Y2r, tissue.neuropil.a001]
		- COUNT[X1Y2r, tissue.neuropil.a001]
		- COUNT[X2Y2r, tissue.neuropil.a001]
		- COUNT[X3Y2r, tissue.neuropil.a001]
		- COUNT[X4Y2r, tissue.neuropil.a001]
		- COUNT[X5Y2r, tissue.neuropil.a001] : "RRP"
	}	=> output_folder & "/dat/rrp.dat"

/*	IP3 and IP3R */
/*'''
	{COUNT[IP3R_Ca_flux, tissue.neuropil.a001_er]} => output_folder & "/dat/ip3r_ca_flux.dat"
	{	COUNT[IP3, tissue.neuropil.a001] : "IP3",
		COUNT[IP3, tripartite_synapse_model.ip3_conc_plane,ESTIMATE_CONCENTRATION] : "IP3.Conc"
	}	=> output_folder &"/dat/ip3.dat"
	{COUNT[IP3R_666, tissue.neuropil.a001_er]} => output_folder & "/dat/ip3r_open.dat"
	{	COUNT[ip3_create_1, tissue.neuropil.a001]
		+ COUNT[ip3_create_2, tissue.neuropil.a001]
	}	=> output_folder &"/dat/ip3_create.dat"
//	{COUNT[ip3_create_3, tissue.neuropil.a001]} => output_folder & "/dat/ip3_create_3.dat"
'''*/

/*	mGluR Pathway stats */
/*'''
	{	COUNT[mGluR, tissue.neuropil.a001] : "mGluR",
		COUNT[mGluR.Glu, tissue.neuropil.a001] : "mGluR.Glu",
		COUNT[mGluR.Glu.Glu, tissue.neuropil.a001] : "mGluR.Glu.Glu"
	} => output_folder & "/dat/mglur.dat"

	{	COUNT[PLC, tissue.neuropil.a001] : "PLC",
		COUNT[PLC.Ca, tissue.neuropil.a001] : "PLC.Ca",
		COUNT[PLC.Ca.PIP2, tissue.neuropil.a001] : "PLC.Ca.PIP2"
	} => output_folder & "/dat/plc.dat"
'''*/

/*	GluT */
/*'''
	{	COUNT[GluT_0, WORLD] : "GluT_0",
		COUNT[GluT_1, WORLD] : "GluT_1",
		COUNT[GluT_2, WORLD] : "GluT_2"
	} => output_folder & "/dat/glut.dat"
'''*/
/*	Glu */
//	{COUNT[Glu, WORLD] : "Glu"} => output_folder & "/dat/glu.dat"

/*	Calbindin */
	{	COUNT[calbindin.high0medium0, tissue.neuropil.a001] : "h0m0",
		COUNT[calbindin.high0medium1, tissue.neuropil.a001] : "h0m1",
		COUNT[calbindin.high0medium2, tissue.neuropil.a001] : "h0m2",
		COUNT[calbindin.high1medium0, tissue.neuropil.a001] : "h1m0",
		COUNT[calbindin.high1medium1, tissue.neuropil.a001] : "h1m1",
		COUNT[calbindin.high1medium2, tissue.neuropil.a001] : "h1m2",
		COUNT[calbindin.high2medium0, tissue.neuropil.a001] : "h2m0",
		COUNT[calbindin.high2medium1, tissue.neuropil.a001] : "h2m1",
		COUNT[calbindin.high2medium2, tissue.neuropil.a001] : "h2m2"
	}	=> output_folder & "/dat/calbindin_mol.dat"

}

/* Header */
/*'''
	fheader = fopen(output_folder & "/header.txt", "w")
	sprintf(k_RyR_Ca_flux,"k_RyR_Ca_flux = %g",k_RyR_Ca_flux)
	fprintf(fheader, k_RyR_Ca_flux)
'''*/
